# Base Dockerfile for all services
FROM node:20-alpine AS base

# Install dependencies needed for building native modules
RUN apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY packages/shared/package.json packages/shared/
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production

# Build stage
FROM base AS builder

# Copy source code
COPY packages/ packages/
COPY tsconfig.json ./

# Build shared package
RUN npm run build:shared

# Runtime stage
FROM node:20-alpine AS runtime

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy built shared package and dependencies
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/packages/shared/dist ./packages/shared/dist
COPY --from=builder --chown=nodejs:nodejs /app/packages/shared/package.json ./packages/shared/

# Set user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "process.exit(0)"